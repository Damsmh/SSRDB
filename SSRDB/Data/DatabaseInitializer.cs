using Npgsql;

namespace SSRDB.Data
{
    public class DatabaseInitializer
    {
        private readonly string _connectionString;

        public DatabaseInitializer(string connectionString)
        {
            _connectionString = connectionString;
        }

        public async Task InitializeDatabaseAsync()
        {
            using var connection = new NpgsqlConnection(_connectionString);
            await connection.OpenAsync();

            var sql = @"
                START TRANSACTION;
                CREATE TABLE IF NOT EXISTS ""Employees"" (
                    ""EmployeeId"" integer GENERATED BY DEFAULT AS IDENTITY,
                    ""FullName"" text NOT NULL,
                    ""Specialization"" text NOT NULL,
                    ""LicenseNumber"" text NOT NULL,
                    ""Phone"" text NOT NULL,
                    CONSTRAINT ""PK_Employees"" PRIMARY KEY (""EmployeeId"")
                );

                CREATE TABLE IF NOT EXISTS ""Medications"" (
                    ""MedicationId"" integer GENERATED BY DEFAULT AS IDENTITY,
                    ""Name"" text NOT NULL,
                    ""Manufacturer"" text NOT NULL,
                    ""Price"" numeric NOT NULL,
                    CONSTRAINT ""PK_Medications"" PRIMARY KEY (""MedicationId"")
                );

                CREATE TABLE IF NOT EXISTS ""Patients"" (
                    ""PatientId"" integer GENERATED BY DEFAULT AS IDENTITY,
                    ""FullName"" text NOT NULL,
                    ""BirthDate"" date NOT NULL,
                    ""Gender"" character(1) NOT NULL,
                    ""PassportNumber"" text NOT NULL,
                    ""Phone"" text NOT NULL,
                    ""Email"" text,
                    ""Address"" text NOT NULL,
                    CONSTRAINT ""PK_Patients"" PRIMARY KEY (""PatientId"")
                );

                CREATE TABLE IF NOT EXISTS ""Services"" (
                    ""ServiceId"" integer GENERATED BY DEFAULT AS IDENTITY,
                    ""Name"" text NOT NULL,
                    ""Price"" numeric NOT NULL,
                    ""DurationMinutes"" integer NOT NULL,
                    CONSTRAINT ""PK_Services"" PRIMARY KEY (""ServiceId"")
                );

                CREATE TABLE IF NOT EXISTS ""Appointments"" (
                    ""AppointmentId"" integer GENERATED BY DEFAULT AS IDENTITY,
                    ""AppointmentDate"" timestamp with time zone NOT NULL,
                    ""Status"" text NOT NULL,
                    ""Notes"" text,
                    ""PatientId"" integer NOT NULL,
                    ""EmployeeId"" integer NOT NULL,
                    CONSTRAINT ""PK_Appointments"" PRIMARY KEY (""AppointmentId""),
                    CONSTRAINT ""FK_Appointments_Employees_EmployeeId"" FOREIGN KEY (""EmployeeId"") REFERENCES ""Employees"" (""EmployeeId"") ON DELETE CASCADE,
                    CONSTRAINT ""FK_Appointments_Patients_PatientId"" FOREIGN KEY (""PatientId"") REFERENCES ""Patients"" (""PatientId"") ON DELETE CASCADE
                );

                CREATE TABLE IF NOT EXISTS ""AppointmentServices"" (
                    ""AppointmentId"" integer NOT NULL,
                    ""ServiceId"" integer NOT NULL,
                    ""AppointmentServiceId"" integer GENERATED BY DEFAULT AS IDENTITY,
                    ""Result"" text,
                    CONSTRAINT ""PK_AppointmentServices"" PRIMARY KEY (""AppointmentId"", ""ServiceId""),
                    CONSTRAINT ""FK_AppointmentServices_Appointments_AppointmentId"" FOREIGN KEY (""AppointmentId"") REFERENCES ""Appointments"" (""AppointmentId"") ON DELETE CASCADE,
                    CONSTRAINT ""FK_AppointmentServices_Services_ServiceId"" FOREIGN KEY (""ServiceId"") REFERENCES ""Services"" (""ServiceId"") ON DELETE CASCADE
                );

                CREATE TABLE IF NOT EXISTS ""Diagnoses"" (
                    ""DiagnosisId"" integer GENERATED BY DEFAULT AS IDENTITY,
                    ""DiagnosisCode"" text NOT NULL,
                    ""Description"" text NOT NULL,
                    ""Recommendations"" text NOT NULL,
                    ""AppointmentId"" integer NOT NULL,
                    CONSTRAINT ""PK_Diagnoses"" PRIMARY KEY (""DiagnosisId""),
                    CONSTRAINT ""FK_Diagnoses_Appointments_AppointmentId"" FOREIGN KEY (""AppointmentId"") REFERENCES ""Appointments"" (""AppointmentId"") ON DELETE CASCADE
                );

                CREATE TABLE IF NOT EXISTS ""Prescriptions"" (
                    ""PrescriptionId"" integer GENERATED BY DEFAULT AS IDENTITY,
                    ""Dosage"" text NOT NULL,
                    ""DurationDays"" integer NOT NULL,
                    ""DiagnosisId"" integer NOT NULL,
                    ""MedicationId"" integer NOT NULL,
                    CONSTRAINT ""PK_Prescriptions"" PRIMARY KEY (""PrescriptionId""),
                    CONSTRAINT ""FK_Prescriptions_Diagnoses_DiagnosisId"" FOREIGN KEY (""DiagnosisId"") REFERENCES ""Diagnoses"" (""DiagnosisId"") ON DELETE CASCADE,
                    CONSTRAINT ""FK_Prescriptions_Medications_MedicationId"" FOREIGN KEY (""MedicationId"") REFERENCES ""Medications"" (""MedicationId"") ON DELETE CASCADE
                );
            ";

            using var command = new NpgsqlCommand(sql, connection);
            await command.ExecuteNonQueryAsync();
        }
    }
}

